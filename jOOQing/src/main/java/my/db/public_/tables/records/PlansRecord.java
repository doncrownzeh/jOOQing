/*
 * This file is generated by jOOQ.
*/
package my.db.public_.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import my.db.public_.tables.Plans;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlansRecord extends UpdatableRecordImpl<PlansRecord> implements Record5<Integer, String, String, Date, Integer> {

    private static final long serialVersionUID = 1930659885;

    /**
     * Setter for <code>public.plans.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.plans.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.plans.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.plans.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.plans.decription</code>.
     */
    public void setDecription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.plans.decription</code>.
     */
    public String getDecription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.plans.date_added</code>.
     */
    public void setDateAdded(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.plans.date_added</code>.
     */
    public Date getDateAdded() {
        return (Date) get(3);
    }

    /**
     * Setter for <code>public.plans.userid</code>.
     */
    public void setUserid(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.plans.userid</code>.
     */
    public Integer getUserid() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, Date, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, Date, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Plans.PLANS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Plans.PLANS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Plans.PLANS.DECRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return Plans.PLANS.DATE_ADDED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Plans.PLANS.USERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDecription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component4() {
        return getDateAdded();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getUserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDecription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getDateAdded();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getUserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlansRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlansRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlansRecord value3(String value) {
        setDecription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlansRecord value4(Date value) {
        setDateAdded(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlansRecord value5(Integer value) {
        setUserid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlansRecord values(Integer value1, String value2, String value3, Date value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlansRecord
     */
    public PlansRecord() {
        super(Plans.PLANS);
    }

    /**
     * Create a detached, initialised PlansRecord
     */
    public PlansRecord(Integer id, String name, String decription, Date dateAdded, Integer userid) {
        super(Plans.PLANS);

        set(0, id);
        set(1, name);
        set(2, decription);
        set(3, dateAdded);
        set(4, userid);
    }
}
